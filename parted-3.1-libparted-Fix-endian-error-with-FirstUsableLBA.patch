From 1190dc5b214ce6ba4cbeadbdd599ab3ebb2cbb13 Mon Sep 17 00:00:00 2001
From: "Richard W.M. Jones" <rjones@redhat.com>
Date: Fri, 8 Jun 2012 14:42:45 -0700
Subject: [PATCH] libparted: Fix endian error with FirstUsableLBA (#829960)

On big-endial systems (eg. ppc64) this would cause parted to
crash.

* NEWS: add new bugfix
* libparted/labels/gpt.c (gpt_get_max_supported_partition_count):
  fix endian issues with pth->FirstUsableLBA
---
 NEWS                   |    3 ++-
 libparted/labels/gpt.c |    4 ++--
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/NEWS b/NEWS
index b0a0657..596ab37 100644
--- a/NEWS
+++ b/NEWS
@@ -1,9 +1,10 @@
 GNU parted NEWS                                    -*- outline -*-
 
-* Noteworthy changes in release 3.1-2 (2012-03-21) [Fedora]
+* Noteworthy changes in release 3.1-4 (2012-06-08) [Fedora]
 
 ** Bug Fixes
 
+  libparted: Don't crash on big-endian systems when using GPT
   libparted: Treat disks without a PMBR as msdos labeled disks
   even if they have GPT partition tables.
 
diff --git a/libparted/labels/gpt.c b/libparted/labels/gpt.c
index ab2145e..6ca33c8 100644
--- a/libparted/labels/gpt.c
+++ b/libparted/labels/gpt.c
@@ -1787,12 +1787,12 @@ gpt_get_max_supported_partition_count (const PedDisk *disk, int *max_n)
 
   if (!_header_is_valid (disk, pth, 1))
     {
-      pth->FirstUsableLBA = 34;
+      pth->FirstUsableLBA = PED_CPU_TO_LE64 (34);
       pth->SizeOfPartitionEntry
         = PED_CPU_TO_LE32 (sizeof (GuidPartitionEntry_t));
     }
 
-  *max_n = (disk->dev->sector_size * (pth->FirstUsableLBA - 2)
+  *max_n = (disk->dev->sector_size * (PED_LE64_TO_CPU (pth->FirstUsableLBA)-2)
             / PED_LE32_TO_CPU (pth->SizeOfPartitionEntry));
   pth_free (pth);
   return true;
-- 
1.7.7.6

