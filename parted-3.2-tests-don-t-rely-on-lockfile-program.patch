From 67c5f61847b9ca8bdd7802d2d7413b2653d9697d Mon Sep 17 00:00:00 2001
From: "Brian C. Lane" <bcl@redhat.com>
Date: Thu, 19 Feb 2015 11:28:25 -0800
Subject: [PATCH 1/5] tests: don't rely on "lockfile" program (#1189328)

Use mkdir, rather than lockfile.  The latter is not always available.

Related: rhbz#1189328
---
 tests/t-local.sh | 21 +++++++++++++++++----
 1 file changed, 17 insertions(+), 4 deletions(-)

diff --git a/tests/t-local.sh b/tests/t-local.sh
index 68effec..3d1d92d 100644
--- a/tests/t-local.sh
+++ b/tests/t-local.sh
@@ -2,7 +2,7 @@
 # This file is sourced from near the end of t-lib.sh.
 sector_size_=${PARTED_SECTOR_SIZE:-512}
 
-scsi_debug_lock_file_="$abs_srcdir/scsi_debug.lock"
+scsi_debug_lock_dir_="$abs_srcdir/scsi_debug.lock"
 
 require_scsi_debug_module_()
 {
@@ -15,13 +15,13 @@ scsi_debug_modprobe_succeeded_=
 cleanup_eval_="$cleanup_eval_; scsi_debug_cleanup_"
 scsi_debug_cleanup_()
 {
-  rm -f $scsi_debug_lock_file_
   test -z "$scsi_debug_modprobe_succeeded_" && return
 
   # We have to insist.  Otherwise, a single rmmod usually fails to remove it,
   # due either to "Resource temporarily unavailable" or to
   # "Module scsi_debug is in use".
   for i in 1 2 3; do rmmod scsi_debug && break; sleep .2 || sleep 1; done
+  rm -fr $scsi_debug_lock_dir_
 }
 
 # Helper function: wait 2s (via .1s increments) for FILE to appear.
@@ -44,8 +44,21 @@ wait_for_dev_to_appear_()
 scsi_debug_acquire_lock_()
 {
   local retries=20
-  local lock_timeout_seconds=120
-  lockfile -1 -r $retries -l $lock_timeout_seconds $scsi_debug_lock_file_
+  local lock_timeout_stale_seconds=120
+
+  # If it was created more than $lock_timeout_stale_seconds ago, remove it.
+  # FIXME: implement this
+
+  local i=0
+  local incr=1
+  while :; do
+    mkdir "$scsi_debug_lock_dir_" && return 0
+    sleep .1 2>/dev/null || { sleep 1; incr=10; }
+    i=$(expr $i + $incr); test $i = $(expr $retries \* 10) && break
+  done
+
+  warn_ "$ME_: failed to acquire lock: $scsi_debug_lock_dir_"
+  return 1
 }
 
 new_sdX_()
-- 
2.1.0

